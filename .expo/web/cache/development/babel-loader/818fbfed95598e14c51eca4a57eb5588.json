{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jennyzhang/Desktop/piggybank/components/Goals.js\";\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar Goals = function Goals(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      price = _useState4[0],\n      setItemPrice = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      description = _useState6[0],\n      setItemDescription = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      transactionId = _useState8[0],\n      setTransactionId = _useState8[1];\n\n  var addGoal = function addGoal() {\n    var newItems = [].concat(_toConsumableArray(items), [{\n      id: transactionId,\n      price: price,\n      description: description\n    }]);\n    setItems(newItems);\n    setTransactionId(transactionId + 1);\n  };\n\n  var getPercentageUntilGoal = function getPercentageUntilGoal(itemPrice) {\n    var percentage = parseFloat((props.totalBalance / itemPrice).toFixed(2)) * 100;\n\n    if (percentage > 100) {\n      return 100;\n    }\n\n    return percentage;\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Purchase Goals\"), items.length == 0 && React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, \"Saving up for an item? Add it here!\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.inputFieldPrice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.preInputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"$\"), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"0.00\",\n    maxLength: 20,\n    onBlur: Keyboard.dismiss,\n    onChangeText: function onChangeText(change) {\n      return setItemPrice(change);\n    },\n    clearButtonMode: \"always\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.inputFieldDescription,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Ex.Skateboard\",\n    maxLength: 20,\n    onBlur: Keyboard.dismiss,\n    onChangeText: function onChangeText(change) {\n      return setItemDescription(change);\n    },\n    clearButtonMode: \"always\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.addButton,\n    onPress: addGoal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Add\")))), React.createElement(View, {\n    style: styles.containerHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.numCol,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"%\"), React.createElement(Text, {\n    style: styles.textDescription,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Description\"), React.createElement(Text, {\n    style: styles.textPrice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Price\")), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, items.map(function (item, index) {\n    return React.createElement(View, {\n      key: item.id,\n      style: getPercentageUntilGoal(item.price) < 100 ? styles.containerNormal : styles.containerGreen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.numCol,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, getPercentageUntilGoal(item.price), \"%\"), React.createElement(Text, {\n      style: styles.textDescription,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, item.description), React.createElement(Text, {\n      style: styles.textPrice,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"$\", parseFloat(item.price).toFixed(2)), React.createElement(TouchableOpacity, {\n      style: styles.xButtonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: styles.xButton,\n      source: require(\"./../images/piggy.png\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    })));\n  })));\n};\n\nvar styles = StyleSheet.create({\n  sectionHeader: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    paddingBottom: \"5%\",\n    paddingTop: \"10%\",\n    textAlign: \"left\",\n    color: \"#373737\"\n  },\n  inputContainer: {\n    paddingTop: 15,\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  preInputField: {\n    color: \"#CCCCCC\",\n    fontSize: 20,\n    paddingRight: \"3%\"\n  },\n  inputFieldPrice: {\n    flex: 2,\n    flexDirection: \"row\"\n  },\n  inputFieldDescription: {\n    flex: 3,\n    flexDirection: \"row\",\n    width: \"100%\"\n  },\n  textInput: {\n    borderColor: \"#CCCCCC\",\n    borderWidth: 1,\n    height: \"100%\",\n    width: \"80%\",\n    fontSize: 15,\n    paddingLeft: \"10%\",\n    paddingRight: \"10%\"\n  },\n  buttonContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  addButton: {\n    borderWidth: 1,\n    borderColor: \"#006400\",\n    backgroundColor: \"#006400\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  buttonText: {\n    color: \"#FFFFFF\",\n    fontSize: 15,\n    textAlign: \"center\",\n    paddingTop: \"5%\"\n  },\n  containerGreen: {\n    padding: 10,\n    marginTop: 3,\n    backgroundColor: \"#d9f9b1\",\n    alignItems: \"flex-start\",\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  containerNormal: {\n    padding: 10,\n    marginTop: 3,\n    alignItems: \"flex-start\",\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  containerHeading: {\n    padding: 10,\n    marginTop: 3,\n    alignItems: \"flex-start\",\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  text: {\n    color: \"#4f603c\",\n    textAlign: \"left\"\n  },\n  numCol: {\n    color: \"#373737\",\n    textAlign: \"left\",\n    flex: 1\n  },\n  textDescription: {\n    color: \"#373737\",\n    textAlign: \"left\",\n    flex: 3\n  },\n  textPrice: {\n    color: \"#373737\",\n    textAlign: \"right\",\n    flex: 1\n  },\n  xButton: {\n    width: \"50%\",\n    height: \"50%\",\n    resizeMode: \"contain\"\n  },\n  xButtonContainer: {\n    flex: 1\n  }\n});\nexport default Goals;","map":{"version":3,"sources":["/Users/jennyzhang/Desktop/piggybank/components/Goals.js"],"names":["React","useState","Goals","props","items","setItems","price","setItemPrice","description","setItemDescription","transactionId","setTransactionId","addGoal","newItems","id","getPercentageUntilGoal","itemPrice","percentage","parseFloat","totalBalance","toFixed","styles","sectionHeader","length","inputContainer","inputFieldPrice","preInputField","textInput","Keyboard","dismiss","change","inputFieldDescription","buttonContainer","addButton","buttonText","containerHeading","numCol","textDescription","textPrice","map","item","index","containerNormal","containerGreen","xButtonContainer","xButton","require","StyleSheet","create","flex","flexDirection","justifyContent","fontSize","fontWeight","paddingBottom","paddingTop","textAlign","color","paddingRight","width","borderColor","borderWidth","height","paddingLeft","backgroundColor","padding","marginTop","alignItems","text","resizeMode"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Text,\n  StyleSheet,\n  View,\n  Image,\n  TextInput,\n  Keyboard,\n  TouchableOpacity,\n} from \"react-native\";\n\nconst Goals = (props) => {\n  const [items, setItems] = useState([]);\n  const [price, setItemPrice] = useState(\"\");\n  const [description, setItemDescription] = useState(\"\");\n  const [transactionId, setTransactionId] = useState(0);\n\n  const addGoal = () => {\n    const newItems = [\n      ...items,\n      {\n        id: transactionId,\n        price: price,\n        description: description,\n      },\n    ];\n    setItems(newItems);\n    setTransactionId(transactionId + 1);\n  };\n\n  const getPercentageUntilGoal = (itemPrice) => {\n    let percentage =\n      parseFloat((props.totalBalance / itemPrice).toFixed(2)) * 100;\n\n    if (percentage > 100) {\n      return 100;\n    }\n    return percentage;\n  };\n\n  return (\n    <View>\n      <Text style={styles.sectionHeader}>Purchase Goals</Text>\n      {items.length == 0 && <Text>Saving up for an item? Add it here!</Text>}\n\n      <View style={styles.inputContainer}>\n        <View style={styles.inputFieldPrice}>\n          <Text style={styles.preInputField}>$</Text>\n          <TextInput\n            style={styles.textInput}\n            placeholder=\"0.00\"\n            maxLength={20}\n            onBlur={Keyboard.dismiss}\n            onChangeText={(change) => setItemPrice(change)}\n            clearButtonMode=\"always\"\n          />\n        </View>\n\n        <View style={styles.inputFieldDescription}>\n          <TextInput\n            style={styles.textInput}\n            placeholder=\"Ex.Skateboard\"\n            maxLength={20}\n            onBlur={Keyboard.dismiss}\n            onChangeText={(change) => setItemDescription(change)}\n            clearButtonMode=\"always\"\n          />\n        </View>\n\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity style={styles.addButton} onPress={addGoal}>\n            <Text style={styles.buttonText}>Add</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      <View style={styles.containerHeading}>\n        <Text style={styles.numCol}>%</Text>\n        <Text style={styles.textDescription}>Description</Text>\n        <Text style={styles.textPrice}>Price</Text>\n      </View>\n      <View>\n        {items.map((item, index) => (\n          <View key={item.id} style={getPercentageUntilGoal(item.price) < 100 ? styles.containerNormal : styles.containerGreen}>\n            <Text style={styles.numCol}>\n              {getPercentageUntilGoal(item.price)}%\n            </Text>\n            <Text style={styles.textDescription}>{item.description}</Text>\n            <Text style={styles.textPrice}>${parseFloat(item.price).toFixed(2)}</Text>\n            <TouchableOpacity\n                style={styles.xButtonContainer}\n\n              >\n                <Image style={styles.xButton} source={require(\"./../images/piggy.png\")} />\n              </TouchableOpacity>\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  sectionHeader: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    paddingBottom: \"5%\",\n    paddingTop: \"10%\",\n    textAlign: \"left\",\n    color: \"#373737\",\n  },\n\n  // for input area\n  inputContainer: {\n    paddingTop: 15,\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  preInputField: {\n    color: \"#CCCCCC\",\n    fontSize: 20,\n    paddingRight: \"3%\",\n  },\n  inputFieldPrice: {\n    flex: 2,\n    flexDirection: \"row\",\n  },\n  inputFieldDescription: {\n    flex: 3,\n    flexDirection: \"row\",\n    width: \"100%\",\n  },\n  textInput: {\n    borderColor: \"#CCCCCC\",\n    borderWidth: 1,\n    height: \"100%\",\n    width: \"80%\",\n    fontSize: 15,\n    paddingLeft: \"10%\",\n    paddingRight: \"10%\",\n  },\n\n  // button\n  buttonContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  addButton: {\n    borderWidth: 1,\n    borderColor: \"#006400\",\n    backgroundColor: \"#006400\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  buttonText: {\n    color: \"#FFFFFF\",\n    fontSize: 15,\n    textAlign: \"center\",\n    paddingTop: \"5%\",\n  },\n\n  // text\n  containerGreen: {\n    padding: 10,\n    marginTop: 3,\n    backgroundColor: \"#d9f9b1\",\n    alignItems: \"flex-start\",\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  containerNormal: {\n    padding: 10,\n    marginTop: 3,\n    alignItems: \"flex-start\",\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  containerHeading: {\n    padding: 10,\n    marginTop: 3,\n    alignItems: \"flex-start\",\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  text: {\n    color: \"#4f603c\",\n    textAlign: \"left\",\n  },\n  numCol: {\n    color: \"#373737\",\n    textAlign: \"left\",\n    flex: 1,\n  },\n  textDescription: {\n    color: \"#373737\",\n    textAlign: \"left\",\n    flex: 3,\n  },\n  textPrice: {\n    color: \"#373737\",\n    textAlign: \"right\",\n    flex: 1,\n\n  },\n  xButton: {\n    width: \"50%\",\n    height: \"50%\",\n    resizeMode: \"contain\",\n  },\n  xButtonContainer: {\n    flex: 1,\n\n\n  }\n});\n\nexport default Goals;\n"]},"metadata":{},"sourceType":"module"}