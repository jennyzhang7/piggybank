{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jennyzhang/Desktop/piggybank/components/Goals.js\";\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar Goals = function Goals() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      price = _useState4[0],\n      setItemPrice = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      description = _useState6[0],\n      setItemDescription = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      transactionId = _useState8[0],\n      setTransactionId = _useState8[1];\n\n  var addGoal = function addGoal() {\n    var newItems = [].concat(_toConsumableArray(items), [{\n      id: transactions.length + 1,\n      amount: cleanedTransactionVal,\n      date: getCurrentDate()\n    }]);\n    setTransactions(newTransactions);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Purchase Goals\"), items.length == 0 && React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }, \"Saving up for an item? Add it here!\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.inputFieldPrice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.preInputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"$\"), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"0.00\",\n    maxLength: 20,\n    onBlur: Keyboard.dismiss,\n    onChangeText: function onChangeText(change) {\n      return setItemPrice(change);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.inputFieldDescription,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Ex.Skateboard\",\n    maxLength: 20,\n    onBlur: Keyboard.dismiss,\n    onChangeText: function onChangeText(change) {\n      return setItemDescription(change);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.addButton,\n    onPress: addGoal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Add\")))));\n};\n\nvar styles = StyleSheet.create({\n  sectionHeader: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    paddingBottom: \"5%\",\n    paddingTop: \"10%\",\n    textAlign: \"left\",\n    color: \"#373737\"\n  },\n  inputContainer: {\n    paddingTop: 15,\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  preInputField: {\n    color: \"#CCCCCC\",\n    fontSize: 20,\n    paddingRight: \"3%\"\n  },\n  inputFieldPrice: {\n    flex: 2,\n    flexDirection: \"row\"\n  },\n  inputFieldDescription: {\n    flex: 3,\n    flexDirection: \"row\",\n    width: \"100%\"\n  },\n  textInput: {\n    borderColor: \"#CCCCCC\",\n    borderWidth: 1,\n    height: \"100%\",\n    width: \"80%\",\n    fontSize: 15,\n    paddingLeft: \"10%\",\n    paddingRight: \"10%\"\n  },\n  buttonContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  addButton: {\n    borderWidth: 1,\n    borderColor: \"#006400\",\n    backgroundColor: \"#006400\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  buttonText: {\n    color: \"#FFFFFF\",\n    fontSize: 15,\n    textAlign: \"center\",\n    paddingTop: \"5%\"\n  }\n});\nexport default Goals;","map":{"version":3,"sources":["/Users/jennyzhang/Desktop/piggybank/components/Goals.js"],"names":["React","useState","Goals","items","setItems","price","setItemPrice","description","setItemDescription","transactionId","setTransactionId","addGoal","newItems","id","transactions","length","amount","cleanedTransactionVal","date","getCurrentDate","setTransactions","newTransactions","styles","sectionHeader","inputContainer","inputFieldPrice","preInputField","textInput","Keyboard","dismiss","change","inputFieldDescription","buttonContainer","addButton","buttonText","StyleSheet","create","flex","flexDirection","justifyContent","fontSize","fontWeight","paddingBottom","paddingTop","textAlign","color","paddingRight","width","borderColor","borderWidth","height","paddingLeft","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Text,\n  StyleSheet,\n  View,\n  Image,\n  TextInput,\n  Keyboard,\n  TouchableOpacity,\n} from \"react-native\";\n\nconst Goals = () => {\n  const [items, setItems] = useState([]);\n  const [price, setItemPrice] = useState(\"\");\n  const [description, setItemDescription] = useState(\"\");\n  const [transactionId, setTransactionId] = useState(0)\n\n  const addGoal = () => {\n    const newItems = [\n      ...items,\n      {\n        id: transactions.length + 1,\n        amount: cleanedTransactionVal,\n        date: getCurrentDate(),\n      },\n    ];\n    setTransactions(newTransactions);\n  }\n\n  return (\n    <View>\n      <Text style={styles.sectionHeader}>Purchase Goals</Text>\n      {items.length == 0 && <Text>Saving up for an item? Add it here!</Text>}\n\n\n      <View style={styles.inputContainer}>\n        <View style={styles.inputFieldPrice}>\n\n            <Text style={styles.preInputField}>$</Text>\n            <TextInput\n              style={styles.textInput}\n              placeholder=\"0.00\"\n              maxLength={20}\n              onBlur={Keyboard.dismiss}\n              onChangeText={(change) => setItemPrice(change)}\n            />\n\n        </View>\n\n          <View style={styles.inputFieldDescription}>\n            <TextInput\n              style={styles.textInput}\n              placeholder=\"Ex.Skateboard\"\n              maxLength={20}\n              onBlur={Keyboard.dismiss}\n              onChangeText={(change) => setItemDescription(change)}\n            />\n          </View>\n\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity style={styles.addButton} onPress={addGoal}>\n            <Text style={styles.buttonText}>Add</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  sectionHeader: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    paddingBottom: \"5%\",\n    paddingTop: \"10%\",\n    textAlign: \"left\",\n    color: \"#373737\",\n  },\n\n  // for input area\n  inputContainer: {\n    paddingTop: 15,\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  preInputField: {\n    color: \"#CCCCCC\",\n    fontSize: 20,\n    paddingRight: \"3%\",\n  },\n  inputFieldPrice: {\n    flex: 2,\n    flexDirection: \"row\",\n  },\n  inputFieldDescription: {\n    flex: 3,\n    flexDirection: \"row\",\n    width: \"100%\",\n  },\n  textInput: {\n    borderColor: \"#CCCCCC\",\n    borderWidth: 1,\n    height: \"100%\",\n    width: \"80%\",\n    fontSize: 15,\n    paddingLeft: \"10%\",\n    paddingRight: \"10%\",\n  },\n\n  // button\n  buttonContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  addButton: {\n    borderWidth: 1,\n    borderColor: \"#006400\",\n    backgroundColor: \"#006400\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  buttonText: {\n    color: \"#FFFFFF\",\n    fontSize: 15,\n    textAlign: \"center\",\n    paddingTop: \"5%\",\n  },\n});\n\nexport default Goals;\n"]},"metadata":{},"sourceType":"module"}